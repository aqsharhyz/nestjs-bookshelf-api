// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  username String  @id @db.VarChar(100)
  password String  @db.VarChar(255)
  email    String  @unique
  name     String  @db.VarChar(255)
  token    String? @db.VarChar(255)
  role     Role    @default(USER)

  books    Book[]
  comments Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("users")
}

model Book {
  id         Int     @id @default(autoincrement())
  title      String  @db.VarChar(255)
  year       Int
  author     String  @db.VarChar(255)
  publisher  String  @db.VarChar(255)
  isFinished Boolean @default(false)
  access     Access  @default(PRIVATE)

  username   String    @db.VarChar(255)
  categoryId Int
  comments   Comment[]

  category Category @relation(fields: [categoryId], references: [id])
  user     User     @relation(fields: [username], references: [username])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("books")
}

model Comment {
  id       Int    @id @default(autoincrement())
  content  String @db.VarChar(255)
  bookId   Int
  username String @db.VarChar(255)

  book Book @relation(fields: [bookId], references: [id])
  user User @relation(fields: [username], references: [username])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("comments")
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String  @unique @db.VarChar(100)
  description String? @db.VarChar(100)

  books Book[]

  @@map("categories")
}

enum Role {
  USER
  ADMIN
}

enum Access {
  PRIVATE
  PUBLIC
}
